import os
import re
import pickle
import pandas as pd
import time

def make_opcode():
    return set(pd.read_csv('opcode_set.csv').apply(lambda x: x.str.lower()).values.reshape(-1))


def code_section():
    DF = pd.read_excel('code_section.xlsx')
    code_section = []

    for i in DF.values.reshape(-1):
        section_name, content = i.split('â€“')

        if 'Code Section' in content:
            code_section.append(section_name.replace(' ', '').lower())

    return code_section
code_section()


def is_code(line, start_text):
    temp = set(line.lower().split(':'))
    temp = temp.intersection(start_text)

    if temp == set():
        return False

    return True


opcode_set = make_opcode()
empty = set()

file_path = '/data/cgh/MS_DATA/train/'
save_path = '/home/mayixuan/MCSC-Simhash/new/ttt/'

file_list = os.listdir(file_path)
no_opcode_file = []

start_text = set(code_section())

start_text.add('.tixt')
start_text.add('.icode')
start_text.add('seg')
start_text

start = time.time()
check = lambda x: True if not start_text[0] in x and not start_text[1] in x else False

for num, file in enumerate(file_list):

    file_opcode = []

    for line in open(file_path + file, 'r', encoding='ISO-8859-1'):

        if not is_code(line, start_text):
            continue

        words = line.split()
        words = set(words)

        opcode = words.intersection(opcode_set)

        if opcode == empty:
            continue

        else:
            file_opcode.append(opcode.pop())
            continue

    if file_opcode == []:
        no_opcode_file.append(file)
        print(f"{file} doesn't have any opcode in CODE or TEXT section")
        continue

    file_name = file.replace('.asm', '.pkl')

    with open(save_path + file_name, 'wb') as fp:
        pickle.dump(file_opcode, fp)

    if num % 1 == 0:
        print('Now processing the {}th file'.format(num + 1))


with open(save_path+file_name, 'rb') as f:
    a = pickle.load(f)

end = time.time()
print('%.6f s' % (end-start))
