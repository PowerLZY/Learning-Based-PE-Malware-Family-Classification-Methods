#!/bin/bash

DATA="${1-MSACFG}"
GPU="${2-2}"  # select the GPU number, 0-3
HP_PATH="${3-msacfg.hp}"
ATTR_GROUP="${4-AttrGroup1}"
# general/default settings
gpu_or_cpu=gpu

# dataset with only attributes from instructions, not including n-grams
# input_dir=../../${DATA}/${ATTR_GROUP}
train_dir=/home/mayixuan/drit-7-dataset/asm/before                             # 表示这个文件夹下的MSACFG.txt（训练集）
test_dir=/home/mayixuan/DGCNN/MalDefender-master/t11    # 表示这个文件夹下的MSACFG_test.txt（相应的测试集）
use_cached_data=True
    # 选False的话就会开始重新计算初始vector和数据缓存，并存到cache_path对应的路径中
cache_path=/home/mayixuan/DGCNN/MalDefender-master/maldefender/data/drift    # 保存cached dataset, 保存到data文件夹下，训练集保存为drift.pkl,测试集保存为drift_test.pkl
norm_path=/home/mayixuan/DGCNN/MalDefender-master/maldefender/data/norm-drift     # 保存Max/Min/Avg/Std vector，保存到data文件夹下，训练集保存为norm-drift.pkl,测试集保存为norm-drift_test.pkl
norm_op=min_max


model_date=01-Apr-2021-23:22:29

CUDA_VISIBLE_DEVICES=${GPU} python predict_model.py      \
  -seed 1                                                   \
  -data ${DATA}                                             \
  -train_dir ${train_dir}                                   \
  -test_dir ${test_dir}                                     \
  -mode ${gpu_or_cpu}                                       \
  -gpu_id ${GPU}                                            \
  -use_cached_data ${use_cached_data}                       \
  -cache_path ${cache_path}                                 \
  -norm_path ${norm_path}                                   \
  -norm_op ${norm_op}                                       \
  -model_date ${model_date}                                 \
  -hp_path ${HP_PATH}

echo "Model prediction saved to ${test_dir}/submission.csv"
head -n10 ${test_dir}/submission.csv
# kaggle competitions submit -c malware-classification -f ${test_dir}/submission.csv -m "prediction by model(${model_date})"
